{"version":3,"file":"447.bundle.js","mappings":"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","sources":["webpack://frontend/../../node_modules/@mui/material/esm/Typography/typographyClasses.js","webpack://frontend/../../node_modules/@mui/material/esm/Typography/Typography.js","webpack://frontend/./src/components/filter/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","import {\n  Box,\n  Checkbox,\n  Collapse,\n  FormControlLabel,\n  IconButton,\n  styled,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { RiAddFill, RiSubtractFill } from \"react-icons/ri\";\n\nconst Container = styled(Box)(({ theme }) => ({\n  width: \"100%\",\n  padding: theme.spacing(0, 1),\n  margin: theme.spacing(1.5, 0),\n}));\n\nconst TitleHeader = styled(\"header\")(() => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  cursor: \"pointer\",\n  alignItems: \"center\",\n}));\n\nexport interface FilterProps {\n  name: string;\n  preExpanded?: boolean;\n  params: string[];\n  activeFilters: string[];\n  onFilterChange: (filter: string) => void;\n}\n\nexport const Filter = ({\n  name,\n  preExpanded,\n  params,\n  activeFilters,\n  onFilterChange,\n}: FilterProps) => {\n  const [expanded, setExpanded] = React.useState(preExpanded ?? false);\n  const [filters, setFilters] = React.useState<string[]>(params);\n\n  const search = (text: string): void => {\n    const filtered = params.filter((param) =>\n      param.toLowerCase().includes(text.toLowerCase()),\n    );\n    setFilters(filtered);\n  };\n\n  return (\n    <Container>\n      <TitleHeader onClick={() => setExpanded((prev) => !prev)}>\n        <Typography variant=\"subtitle1\">{name}</Typography>\n        <IconButton size=\"small\">\n          {expanded ? <RiSubtractFill /> : <RiAddFill />}\n        </IconButton>\n      </TitleHeader>\n      {params.length > 5 && (\n        <TextField\n          label={`Search for ${name}`}\n          variant=\"outlined\"\n          fullWidth\n          sx={{ mb: 1 }}\n          size=\"small\"\n          onChange={(e) => {\n            const value = e.target.value;\n            search(value);\n          }}\n        />\n      )}\n      <Collapse in={expanded}>\n        {filters.map((param) => (\n          <Box key={param}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={activeFilters.includes(param)}\n                  onChange={() => onFilterChange(param)}\n                  size=\"small\"\n                />\n              }\n              label={<Typography variant=\"body2\">{param}</Typography>}\n            />\n          </Box>\n        ))}\n      </Collapse>\n    </Container>\n  );\n};\n"],"names":["getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","Container","Box","width","padding","spacing","TitleHeader","display","justifyContent","cursor","alignItems","Filter","preExpanded","params","activeFilters","onFilterChange","React","expanded","setExpanded","filters","setFilters","onClick","prev","size","length","label","fullWidth","sx","mb","onChange","e","text","filtered","value","target","filter","param","toLowerCase","includes","in","map","key","control","checked"],"sourceRoot":""}