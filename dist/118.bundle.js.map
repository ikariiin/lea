{"version":3,"file":"118.bundle.js","mappings":";0lDAGO,IAAMA,EAAc,SAAH,GAKL,IAJjBC,EAAQ,EAARA,SACGC,oXAAK,MAIR,OACE,gBAAC,IAAK,KAAKA,EAAK,CAAEC,GAAE,GAAIC,QAAS,GAAMF,aAAK,EAALA,EAAOC,MAC3CF,EAGP,EAXwB,aAAXD,EAAW,uHCEXK,EAAc,SAAH,GAAoD,IAA9CC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAChD,OACE,gBAAC,EAAAR,YAAW,CAACG,GAAI,CAAEM,MAAO,IAAKC,OAAQ,YACrC,gBAAC,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGT,GAAI,CAAEU,GAAI,IAC3C,gBAAC,IAAM,KAAEP,EAAM,GAAGQ,eAClB,gBAAC,IAAK,CAACH,UAAU,UACf,gBAAC,IAAU,CAACI,QAAQ,MAAMT,GAC1B,gBAAC,IAAU,CAACS,QAAQ,QAAQC,MAAM,kBAC/BT,KAIP,gBAAC,IAAU,CAACQ,QAAQ,QAAQZ,GAAI,CAAEc,GAAI,IAAK,IACvCT,EAAW,OAIrB,EAjBwB,aAAXH,EAAW,6oBCJxB,gnGAAAa,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,2bAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAKA,IAAMC,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,YAAQ,MAAQ,CAC5CX,MAAO,OACPL,QAFoC,EAALkB,MAEhBV,QAAQ,EAAG,GAC1BW,QAAS,OACTC,WAAY,SACZC,cAAe,SAChB,IAAG,EANEN,EAQC,IAAmB,IAAbO,EAAgB,WAAM,IACjC,IAdF,EAAAR,EAc+D,GAd/D,EAckCS,EAAAA,SAA0B,IAd5DT,EAc+D,EAd/D,yDAAAA,GAAA,0JAAAA,EAAA,6FAAAA,GAAA,mIAAAA,IAAA,+RAAAA,IAAA,gLAcSU,EAAQ,KAAEC,EAAW,KAEtBC,EAAW,eAhBnB,EAgBmB,GAhBnB,EAgBmB,UAAG,qGACKC,EAAAA,EAAAA,qBAAmB,OAApCH,EAAW,EAAH,KACdC,EAAYD,GAAU,0CAlB1B,+KAmBG,kBAHgB,mCASjB,OAJAD,EAAAA,WAAgB,WACdG,GACF,GAAG,IAGD,gBAACX,EAAS,KACR,gBAAC,IAAU,CAACJ,QAAQ,KAAKiB,cAAY,GAAC,mBAGtC,gBAAC,IAAK,CACJrB,UAAU,MACVC,QAAS,EACTT,GAAI,CACF8B,SAAU,SACVC,UAAW,OAEXC,EAAG,IAGJP,EAASQ,KAAI,SAACC,GAAO,OACpB,gBAAC,EAAAhC,YAAW,GAACiC,IAAKD,EAAQE,IAAQF,GAAW,KAGjD,gBAAC,IAAU,CAACtB,QAAQ,QAAQZ,GAAI,CAAEc,GAAI,IAAK,4EAI3C,gBAAC,IAAM,CACLuB,UAAWC,EAAAA,GACXC,GAAG,YACH3B,QAAQ,YACRZ,GAAI,CAAEc,GAAI,GACV0B,KAAK,QACL3B,MAAM,WACP,uBAKP,EAAE,EA/CWU,EAAa,kCAAbA,EAAa","sources":["webpack://frontend/./src/components/common/padded-paper.tsx","webpack://frontend/./src/components/listing/card.tsx","webpack://frontend/./src/features/landing/recent-listing.tsx"],"sourcesContent":["import { Paper, PaperProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport const PaddedPaper = ({\n  children,\n  ...props\n}: {\n  children: React.ReactNode;\n} & PaperProps) => {\n  return (\n    <Paper {...props} sx={{ padding: 2, ...props?.sx }}>\n      {children}\n    </Paper>\n  );\n};\n","import { Avatar, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { Listing } from \"../../services/api/listing\";\nimport { PaddedPaper } from \"../common/padded-paper\";\n\nexport const ListingCard = ({ title, description, hourlyRate }: Listing) => {\n  return (\n    <PaddedPaper sx={{ width: 320, cursor: \"pointer\" }}>\n      <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\n        <Avatar>{title[0].toUpperCase()}</Avatar>\n        <Stack direction=\"column\">\n          <Typography variant=\"h5\">{title}</Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {description}\n          </Typography>\n        </Stack>\n      </Stack>\n      <Typography variant=\"body1\" sx={{ mt: 2 }}>\n        â‚¹{hourlyRate}/hr\n      </Typography>\n    </PaddedPaper>\n  );\n};\n","import { Box, Button, Stack, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ListingCard } from \"../../components/listing/card\";\nimport { getRecentListings, Listing } from \"../../services/api/listing\";\n\nconst Container = styled(Box)(({ theme }) => ({\n  width: \"100%\",\n  padding: theme.spacing(4, 2),\n  display: \"flex\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n}));\n\nexport const RecentListing = () => {\n  const [listings, setListings] = React.useState<Listing[]>([]);\n\n  const getListings = async () => {\n    const listings = await getRecentListings();\n    setListings(listings);\n  };\n\n  React.useEffect(() => {\n    getListings();\n  }, []);\n\n  return (\n    <Container>\n      <Typography variant=\"h3\" gutterBottom>\n        Recent Listings\n      </Typography>\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        sx={{\n          flexWrap: \"nowrap\",\n          overflowX: \"auto\",\n          // width: \"100%\",\n          p: 1,\n        }}\n      >\n        {listings.map((listing) => (\n          <ListingCard key={listing.id} {...listing} />\n        ))}\n      </Stack>\n      <Typography variant=\"body1\" sx={{ mt: 2 }}>\n        Don&apos;t see what you&apos;re looking for? No worries, browse all\n        listings here.\n      </Typography>\n      <Button\n        component={NavLink}\n        to=\"/listings\"\n        variant=\"contained\"\n        sx={{ mt: 1 }}\n        size=\"large\"\n        color=\"primary\"\n      >\n        Browse All Listings\n      </Button>\n    </Container>\n  );\n};\n"],"names":["PaddedPaper","children","props","sx","padding","ListingCard","title","description","hourlyRate","width","cursor","direction","spacing","mb","toUpperCase","variant","color","mt","i","Container","styled","Box","theme","display","alignItems","flexDirection","RecentListing","React","listings","setListings","getListings","getRecentListings","gutterBottom","flexWrap","overflowX","p","map","listing","key","id","component","NavLink","to","size"],"sourceRoot":""}